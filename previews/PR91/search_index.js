var documenterSearchIndex = {"docs":
[{"location":"resources/#Resources","page":"Resources","title":"Resources","text":"","category":"section"},{"location":"resources/","page":"Resources","title":"Resources","text":"Targeted Learning is a difficult topic, while it is not strictly necessary to understand the details to use this package it can certainly help. Here is an incomplete list of external ressources that I found useful in my personnal search for enlightenment.","category":"page"},{"location":"resources/#Websites","page":"Resources","title":"Websites","text":"","category":"section"},{"location":"resources/","page":"Resources","title":"Resources","text":"These are two very clear introductions to causal inference and semi-parametric estimation:","category":"page"},{"location":"resources/","page":"Resources","title":"Resources","text":"Introduction to Modern Causal Inference (Alejandro Schuler, Mark J. van der Laan).\nA Ride in Targeted Learning Territory (David Benkeser, Antoine Chambaz).","category":"page"},{"location":"resources/#Text-Books","page":"Resources","title":"Text Books","text":"","category":"section"},{"location":"resources/","page":"Resources","title":"Resources","text":"Targeted Learning (Mark J. van der Laan, Sherri Rose).","category":"page"},{"location":"resources/#Journal-articles","page":"Resources","title":"Journal articles","text":"","category":"section"},{"location":"resources/","page":"Resources","title":"Resources","text":"Semiparametric doubly robust targeted double machine learning: a review (Edward H. Kennedy).","category":"page"},{"location":"api/#API-Reference","page":"API Reference","title":"API Reference","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"Modules = [TMLE]\nPrivate = false","category":"page"},{"location":"api/#HypothesisTests.OneSampleTTest","page":"API Reference","title":"HypothesisTests.OneSampleTTest","text":"OneSampleTTest(r::EICEstimate, Ψ₀=0)\n\nPerforms a T test on the EICEstimate.\n\n\n\n\n\n","category":"type"},{"location":"api/#HypothesisTests.OneSampleTTest-2","page":"API Reference","title":"HypothesisTests.OneSampleTTest","text":"OneSampleTTest(r::ComposedEstimate, Ψ₀=0)\n\nPerforms a T test on the ComposedEstimate.\n\n\n\n\n\n","category":"type"},{"location":"api/#HypothesisTests.OneSampleZTest","page":"API Reference","title":"HypothesisTests.OneSampleZTest","text":"OneSampleZTest(r::EICEstimate, Ψ₀=0)\n\nPerforms a Z test on the EICEstimate.\n\n\n\n\n\n","category":"type"},{"location":"api/#HypothesisTests.OneSampleZTest-2","page":"API Reference","title":"HypothesisTests.OneSampleZTest","text":"OneSampleZTest(r::ComposedEstimate, Ψ₀=0)\n\nPerforms a T test on the ComposedEstimate.\n\n\n\n\n\n","category":"type"},{"location":"api/#TMLE.OSE-Tuple{Any}","page":"API Reference","title":"TMLE.OSE","text":"OSE(models; resampling=nothing, ps_lowerbound=1e-8)\n\nDefines a One Step Estimator using the specified models for estimation of the nuisance parameters. The estimator is a  function that can be applied to estimate estimands for a dataset.\n\nArguments\n\nmodels: A NamedTuple{variables}(models) where the variables are the outcome variables modeled by the models.\nresampling: Outer resampling strategy. Setting it to nothing (default) falls back to vanilla estimation while \n\nany valid MLJ.ResamplingStrategy will result in CV-OSE.\n\nps_lowerbound: Lowerbound for the propensity score to avoid division by 0. The special value nothing will \n\nresult in a data adaptive definition as described in here.\n\nExample\n\nusing MLJLinearModels\nmodels = (Y = LinearRegressor(), T = LogisticClassifier())\nose = OSE(models)\nΨ̂ₙ, cache = ose(Ψ, dataset)\n\n\n\n\n\n","category":"method"},{"location":"api/#TMLE.SCM","page":"API Reference","title":"TMLE.SCM","text":"A SCM is simply a MetaGraph over a Directed Acyclic Graph with additional methods.\n\n\n\n\n\n","category":"type"},{"location":"api/#TMLE.TMLEE-Tuple{Any}","page":"API Reference","title":"TMLE.TMLEE","text":"TMLEE(models; resampling=nothing, ps_lowerbound=1e-8, weighted=false, tol=nothing)\n\nDefines a TMLE estimator using the specified models for estimation of the nuisance parameters. The estimator is a  function that can be applied to estimate estimands for a dataset.\n\nArguments\n\nmodels: A NamedTuple{variables}(models) where the variables are the outcome variables modeled by the models.\nresampling: Outer resampling strategy. Setting it to nothing (default) falls back to vanilla TMLE while \n\nany valid MLJ.ResamplingStrategy will result in CV-TMLE.\n\nps_lowerbound: Lowerbound for the propensity score to avoid division by 0. The special value nothing will \n\nresult in a data adaptive definition as described in here.\n\nweighted: Whether the fluctuation model is a classig GLM or a weighted version. The weighted fluctuation has \n\nbeen show to be more robust to positivity violation in practice.\n\ntol: This is not used at the moment.\n\nExample\n\nusing MLJLinearModels\nmodels = (Y = LinearRegressor(), T = LogisticClassifier())\ntmle = TMLEE(models)\nΨ̂ₙ, cache = tmle(Ψ, dataset)\n\n\n\n\n\n","category":"method"},{"location":"api/#TMLE.TreatmentTransformer-Tuple{}","page":"API Reference","title":"TMLE.TreatmentTransformer","text":"TreatmentTransformer(;encoder=encoder())\n\nTreatments in TMLE are represented by CategoricalArrays. If a treatment column has type OrderedFactor, then its integer representation is used, make sure that  the levels correspond to your expectations. All other columns are one-hot encoded.\n\n\n\n\n\n","category":"method"},{"location":"api/#Distributions.estimate-Tuple{TMLE.ComposedEstimate}","page":"API Reference","title":"Distributions.estimate","text":"Distributions.estimate(r::ComposedEstimate)\n\nRetrieves the final estimate: after the TMLE step.\n\n\n\n\n\n","category":"method"},{"location":"api/#Distributions.estimate-Tuple{Union{TMLE.OSEstimate, TMLE.TMLEstimate}}","page":"API Reference","title":"Distributions.estimate","text":"Distributions.estimate(r::EICEstimate)\n\nRetrieves the final estimate: after the TMLE step.\n\n\n\n\n\n","category":"method"},{"location":"api/#Statistics.var-Tuple{TMLE.ComposedEstimate}","page":"API Reference","title":"Statistics.var","text":"var(r::ComposedEstimate)\n\nComputes the estimated variance associated with the estimate.\n\n\n\n\n\n","category":"method"},{"location":"api/#Statistics.var-Tuple{Union{TMLE.OSEstimate, TMLE.TMLEstimate}}","page":"API Reference","title":"Statistics.var","text":"var(r::EICEstimate)\n\nComputes the estimated variance associated with the estimate.\n\n\n\n\n\n","category":"method"},{"location":"api/#TMLE.StaticSCM-Tuple{Any, Any, Any}","page":"API Reference","title":"TMLE.StaticSCM","text":"A plate Structural Causal Model where:\n\nFor all outcomes: oᵢ = fᵢ(treatments, confounders, outcomeextracovariates)\nFor all treatments: tⱼ = fⱼ(confounders)\n\nExample\n\nStaticSCM([:Y], [:T₁, :T₂], [:W₁, :W₂, :W₃]; outcomeextracovariates=[:C])\n\n\n\n\n\n","category":"method"},{"location":"api/#TMLE.compose-Union{Tuple{N}, Tuple{Any, Vararg{Union{TMLE.OSEstimate, TMLE.TMLEstimate}, N}}} where N","page":"API Reference","title":"TMLE.compose","text":"compose(f, estimation_results::Vararg{EICEstimate, N}) where N\n\nProvides an estimator of f(estimation_results...).\n\nMathematical details\n\nThe following is a summary from Asymptotic Statistics, A. W. van der Vaart.\n\nConsider k TMLEs computed from a dataset of size n and embodied by Tₙ = (T₁,ₙ, ..., Tₖ,ₙ).  Since each of them is asymptotically normal, the multivariate CLT provides the joint  distribution:\n\n√n(Tₙ - Ψ₀) ↝ N(0, Σ),\n\nwhere Σ is the covariance matrix of the TMLEs influence curves.\n\nLet f:ℜᵏ→ℜᵐ, be a differentiable map at Ψ₀. Then, the delta method provides the limiting distribution of √n(f(Tₙ) - f(Ψ₀)). Because Tₙ is normal, the result is:\n\n√n(f(Tₙ) - f(Ψ₀)) ↝ N(0, ∇f(Ψ₀) ̇Σ ̇(∇f(Ψ₀))ᵀ),\n\nwhere ∇f(Ψ₀):ℜᵏ→ℜᵐ is a linear map such that by abusing notations and identifying the  function with the multiplication matrix: ∇f(Ψ₀):h ↦ ∇f(Ψ₀) ̇h. And the matrix ∇f(Ψ₀) is  the jacobian of f at Ψ₀.\n\nHence, the only thing we need to do is:\n\nCompute the covariance matrix Σ\nCompute the jacobian ∇f, which can be done using Julia's automatic differentiation facilities.\nThe final estimator is normal with mean f₀=f(Ψ₀) and variance σ₀=∇f(Ψ₀) ̇Σ ̇(∇f(Ψ₀))ᵀ\n\nArguments\n\nf: An array-input differentiable map.\nestimation_results: 1 or more EICEstimate structs.\n\nExamples\n\nAssuming res₁ and res₂ are TMLEs:\n\nf(x, y) = [x^2 - y, y - 3x]\ncompose(f, res₁, res₂)\n\n\n\n\n\n","category":"method"},{"location":"user_guide/misc/#Miscellaneous","page":"Miscellaneous","title":"Miscellaneous","text":"","category":"section"},{"location":"user_guide/misc/#Adjustment-Methods","page":"Miscellaneous","title":"Adjustment Methods","text":"","category":"section"},{"location":"user_guide/misc/","page":"Miscellaneous","title":"Miscellaneous","text":"An adjustment method is a function that transforms a causal estimand into a statistical estimand using an associated SCM. At the moment, the only available adjustment method is the backdoor adjustment.","category":"page"},{"location":"user_guide/misc/#Backdoor-Adjustment","page":"Miscellaneous","title":"Backdoor Adjustment","text":"","category":"section"},{"location":"user_guide/misc/","page":"Miscellaneous","title":"Miscellaneous","text":"The adjustment set consists of all the treatment variable's parents. Additional covariates used to fit the outcome model can be provided via outcome_extra.","category":"page"},{"location":"user_guide/misc/","page":"Miscellaneous","title":"Miscellaneous","text":"BackdoorAdjustment(;outcome_extra_covariates=[:C])","category":"page"},{"location":"user_guide/misc/#Treatment-Transformer","page":"Miscellaneous","title":"Treatment Transformer","text":"","category":"section"},{"location":"user_guide/misc/","page":"Miscellaneous","title":"Miscellaneous","text":"To account for the fact that treatment variables are categorical variables we provide a MLJ compliant transformer that will either:","category":"page"},{"location":"user_guide/misc/","page":"Miscellaneous","title":"Miscellaneous","text":"Retrieve the floating point representation of a treatment if it has a natural ordering\nOne hot encode it otherwise","category":"page"},{"location":"user_guide/misc/","page":"Miscellaneous","title":"Miscellaneous","text":"Such transformer can be created with:","category":"page"},{"location":"user_guide/misc/","page":"Miscellaneous","title":"Miscellaneous","text":"TreatmentTransformer(;encoder=encoder())","category":"page"},{"location":"user_guide/misc/","page":"Miscellaneous","title":"Miscellaneous","text":"where encoder is a OneHotEncoder.","category":"page"},{"location":"user_guide/misc/","page":"Miscellaneous","title":"Miscellaneous","text":"The with_encoder(model; encoder=TreatmentTransformer()) provides a shorthand to combine a TreatmentTransformer with another MLJ model in a pipeline.","category":"page"},{"location":"user_guide/misc/","page":"Miscellaneous","title":"Miscellaneous","text":"Of course you are also free to define your own strategy!","category":"page"},{"location":"user_guide/estimation/","page":"Estimation","title":"Estimation","text":"CurrentModule = TMLE","category":"page"},{"location":"user_guide/estimation/#Estimation","page":"Estimation","title":"Estimation","text":"","category":"section"},{"location":"user_guide/estimation/#Estimating-a-single-Estimand","page":"Estimation","title":"Estimating a single Estimand","text":"","category":"section"},{"location":"user_guide/estimation/","page":"Estimation","title":"Estimation","text":"using Random\nusing Distributions\nusing DataFrames\nusing StableRNGs\nusing CategoricalArrays\nusing TMLE\nusing LogExpFunctions\nusing MLJLinearModels\nusing MLJ\n\nfunction make_dataset(;n=1000)\n    rng = StableRNG(123)\n    # Confounders\n    W₁₁= rand(rng, Uniform(), n)\n    W₁₂ = rand(rng, Uniform(), n)\n    W₂₁= rand(rng, Uniform(), n)\n    W₂₂ = rand(rng, Uniform(), n)\n    # Covariates\n    C = rand(rng, Uniform(), n)\n    # Treatment | Confounders\n    T₁ = rand(rng, Uniform(), n) .< logistic.(0.5sin.(W₁₁) .- 1.5W₁₂)\n    T₂ = rand(rng, Uniform(), n) .< logistic.(-3W₂₁ - 1.5W₂₂)\n    # Target | Confounders, Covariates, Treatments\n    Y = 1 .+ 2W₂₁ .+ 3W₂₂ .+ W₁₁ .- 4C.*T₁ .- 2T₂.*T₁.*W₁₂ .+ rand(rng, Normal(0, 0.1), n)\n    return DataFrame(\n        W₁₁ = W₁₁, \n        W₁₂ = W₁₂,\n        W₂₁ = W₂₁,\n        W₂₂ = W₂₂,\n        C   = C,\n        T₁  = categorical(T₁),\n        T₂  = categorical(T₂),\n        Y   = Y\n        )\nend\ndataset = make_dataset(n=10000)\nscm = SCM(\n    :Y  => [:T₁, :T₂, :W₁₁, :W₁₂, :W₂₁, :W₂₂, :C],\n    :T₁ => [:W₁₁, :W₁₂],\n    :T₂ => [:W₂₁, :W₂₂],\n)","category":"page"},{"location":"user_guide/estimation/","page":"Estimation","title":"Estimation","text":"Once a statistical estimand has been defined, we can proceed with estimation. At the moment, we provide 3 main types of estimators:","category":"page"},{"location":"user_guide/estimation/","page":"Estimation","title":"Estimation","text":"Targeted Maximum Likelihood Estimator (TMLEE)\nOne-Step Estimator (OSE)\nNaive Plugin Estimator (NAIVE)","category":"page"},{"location":"user_guide/estimation/","page":"Estimation","title":"Estimation","text":"Drawing from the example dataset and SCM from the Walk Through section, we can estimate the ATE for T₁. Let's use TMLE:","category":"page"},{"location":"user_guide/estimation/","page":"Estimation","title":"Estimation","text":"Ψ₁ = ATE(\n    outcome=:Y, \n    treatment_values=(T₁=(case=true, control=false),),\n    treatment_confounders=(T₁=[:W₁₁, :W₁₂],),\n    outcome_extra_covariates=[:C]\n)\nmodels = (\n    Y=with_encoder(LinearRegressor()), \n    T₁=LogisticClassifier(),\n    T₂=LogisticClassifier(),\n)\ntmle = TMLEE(models)\nresult₁, cache = tmle(Ψ₁, dataset);\nresult₁\nnothing # hide","category":"page"},{"location":"user_guide/estimation/","page":"Estimation","title":"Estimation","text":"We see that both models corresponding to variables Y and T₁ were fitted in the process but that the model for T₂ was not because it was not necessary to estimate this estimand.","category":"page"},{"location":"user_guide/estimation/","page":"Estimation","title":"Estimation","text":"The cache contains estimates for the nuisance functions that were necessary to estimate the ATE. For instance, we can see what is the value of epsilon corresponding to the clever covariate.","category":"page"},{"location":"user_guide/estimation/","page":"Estimation","title":"Estimation","text":"ϵ = last_fluctuation_epsilon(cache)","category":"page"},{"location":"user_guide/estimation/","page":"Estimation","title":"Estimation","text":"The result₁ structure corresponds to the estimation result and should report 3 main elements:","category":"page"},{"location":"user_guide/estimation/","page":"Estimation","title":"Estimation","text":"A point estimate.\nA 95% confidence interval.\nA p-value (Corresponding to the test that the estimand is different than 0).","category":"page"},{"location":"user_guide/estimation/","page":"Estimation","title":"Estimation","text":"This is only summary statistics but since both the TMLE and OSE are asymptotically linear estimators, standard Z/T tests from HypothesisTests.jl can be performed.","category":"page"},{"location":"user_guide/estimation/","page":"Estimation","title":"Estimation","text":"tmle_test_result₁ = OneSampleTTest(result₁)","category":"page"},{"location":"user_guide/estimation/","page":"Estimation","title":"Estimation","text":"We could now get an interest in the Average Treatment Effect of T₂ that we will estimate with an OSE:","category":"page"},{"location":"user_guide/estimation/","page":"Estimation","title":"Estimation","text":"Ψ₂ = ATE(\n    outcome=:Y, \n    treatment_values=(T₂=(case=true, control=false),),\n    treatment_confounders=(T₂=[:W₂₁, :W₂₂],),\n    outcome_extra_covariates=[:C]\n)\nose = OSE(models)\nresult₂, cache = ose(Ψ₂, dataset;cache=cache);\nresult₂\nnothing # hide","category":"page"},{"location":"user_guide/estimation/","page":"Estimation","title":"Estimation","text":"Again, required nuisance functions are fitted and stored in the cache.","category":"page"},{"location":"user_guide/estimation/#Reusing-the-SCM","page":"Estimation","title":"Reusing the SCM","text":"","category":"section"},{"location":"user_guide/estimation/","page":"Estimation","title":"Estimation","text":"Let's now see how the cache can be reused with a new estimand, say the Total Average Treatment Effect of both T₁ and T₂.","category":"page"},{"location":"user_guide/estimation/","page":"Estimation","title":"Estimation","text":"Ψ₃ = ATE(\n    outcome=:Y, \n    treatment_values=(\n        T₁=(case=true, control=false), \n        T₂=(case=true, control=false)\n    ),\n    treatment_confounders=(\n        T₁=[:W₁₁, :W₁₂], \n        T₂=[:W₂₁, :W₂₂],\n    ),\n    outcome_extra_covariates=[:C]\n)\nresult₃, cache = tmle(Ψ₃, dataset; cache=cache);\nresult₃\nnothing # hide","category":"page"},{"location":"user_guide/estimation/","page":"Estimation","title":"Estimation","text":"This time only the model for Y is fitted again while reusing the models for T₁ and T₂. Finally, let's see what happens if we estimate the IATE between T₁ and T₂.","category":"page"},{"location":"user_guide/estimation/","page":"Estimation","title":"Estimation","text":"Ψ₄ = IATE(\n    outcome=:Y, \n    treatment_values=(\n        T₁=(case=true, control=false), \n        T₂=(case=true, control=false)\n    ),\n    treatment_confounders=(\n        T₁=[:W₁₁, :W₁₂], \n        T₂=[:W₂₁, :W₂₂],\n    ),\n    outcome_extra_covariates=[:C]\n)\nresult₄, cache = tmle(Ψ₄, dataset; cache=cache);\nresult₄\nnothing # hide","category":"page"},{"location":"user_guide/estimation/","page":"Estimation","title":"Estimation","text":"All nuisance functions have been reused, only the fluctuation is fitted!","category":"page"},{"location":"user_guide/estimation/#Composing-Estimands","page":"Estimation","title":"Composing Estimands","text":"","category":"section"},{"location":"user_guide/estimation/","page":"Estimation","title":"Estimation","text":"By leveraging the multivariate Central Limit Theorem and Julia's automatic differentiation facilities, we can estimate any estimand which is a function of already estimated estimands. By default, TMLE.jl will use Zygote but since we are using AbstractDifferentiation.jl you can change the backend to your favorite AD system.","category":"page"},{"location":"user_guide/estimation/","page":"Estimation","title":"Estimation","text":"For instance, by definition of the IATE, we should be able to retrieve:","category":"page"},{"location":"user_guide/estimation/","page":"Estimation","title":"Estimation","text":"IATE_T_1=0 rightarrow 1 T_2=0 rightarrow 1 = ATE_T_1=0 rightarrow 1 T_2=0 rightarrow 1 - ATE_T_1=0 T_2=0 rightarrow 1 - ATE_T_1=0 rightarrow 1 T_2=0","category":"page"},{"location":"user_guide/estimation/","page":"Estimation","title":"Estimation","text":"first_ate = ATE(\n    outcome=:Y, \n    treatment_values=(\n        T₁=(case=true, control=false), \n        T₂=(case=false, control=false)),\n    treatment_confounders=(\n        T₁=[:W₁₁, :W₁₂], \n        T₂=[:W₂₁, :W₂₂],\n    ),\n)\nfirst_ate_result, cache = tmle(first_ate, dataset, cache=cache, verbosity=0);\n\nsecond_ate = ATE(\n    outcome=:Y, \n    treatment_values=(\n        T₁=(case=false, control=false), \n        T₂=(case=true, control=false)),\n    treatment_confounders=(\n        T₁=[:W₁₁, :W₁₂], \n        T₂=[:W₂₁, :W₂₂],\n    ),\n    )\nsecond_ate_result, cache = tmle(second_ate, dataset, cache=cache, verbosity=0);\n\ncomposed_iate_result = compose(\n    (x, y, z) -> x - y - z, \n    result₃, first_ate_result, second_ate_result\n)\nisapprox(\n    estimate(result₄),\n    estimate(composed_iate_result),\n    atol=0.1\n)","category":"page"},{"location":"walk_through/","page":"Walk Through","title":"Walk Through","text":"CurrentModule = TMLE","category":"page"},{"location":"walk_through/#Walk-Through","page":"Walk Through","title":"Walk Through","text":"","category":"section"},{"location":"walk_through/","page":"Walk Through","title":"Walk Through","text":"The goal of this section is to provide a comprehensive (but non-exhaustive) illustration of the estimation process provided in TMLE.jl. For an in-depth explanation, please refer to the User Guide.","category":"page"},{"location":"walk_through/#The-Dataset","page":"Walk Through","title":"The Dataset","text":"","category":"section"},{"location":"walk_through/","page":"Walk Through","title":"Walk Through","text":"TMLE.jl is compatible with any dataset respecting the Tables.jl interface, that is for instance, a NamedTuple, a DataFrame, an Arrow.Table etc... In this section, we will be working with the same dataset all along.","category":"page"},{"location":"walk_through/","page":"Walk Through","title":"Walk Through","text":"⚠️ One thing to note is that treatment variables as well as binary outcomes must be encoded as categorical variables in the dataset (see MLJ Working with categorical data).","category":"page"},{"location":"walk_through/","page":"Walk Through","title":"Walk Through","text":"The dataset is generated as follows:","category":"page"},{"location":"walk_through/","page":"Walk Through","title":"Walk Through","text":"using TMLE\nusing Random\nusing Distributions\nusing DataFrames\nusing StableRNGs\nusing CategoricalArrays\nusing TMLE\nusing LogExpFunctions\nusing MLJLinearModels\n\nfunction make_dataset(;n=1000)\n    rng = StableRNG(123)\n    # Confounders\n    W₁₁= rand(rng, Uniform(), n)\n    W₁₂ = rand(rng, Uniform(), n)\n    W₂₁= rand(rng, Uniform(), n)\n    W₂₂ = rand(rng, Uniform(), n)\n    # Covariates\n    C = rand(rng, Uniform(), n)\n    # Treatment | Confounders\n    T₁ = rand(rng, Uniform(), n) .< logistic.(0.5sin.(W₁₁) .- 1.5W₁₂)\n    T₂ = rand(rng, Uniform(), n) .< logistic.(-3W₂₁ - 1.5W₂₂)\n    # Target | Confounders, Covariates, Treatments\n    Y = 1 .+ 2W₂₁ .+ 3W₂₂ .+ W₁₁ .- 4C.*T₁ .- 2T₂.*T₁.*W₁₂ .+ rand(rng, Normal(0, 0.1), n)\n    return DataFrame(\n        W₁₁ = W₁₁, \n        W₁₂ = W₁₂,\n        W₂₁ = W₂₁,\n        W₂₂ = W₂₂,\n        C   = C,\n        T₁  = categorical(T₁),\n        T₂  = categorical(T₂),\n        Y   = Y\n        )\nend\ndataset = make_dataset()\nnothing # hide","category":"page"},{"location":"walk_through/","page":"Walk Through","title":"Walk Through","text":"Even though the role of a variable (treatment, outcome, confounder, ...) is relative to the problem setting, this dataset can intuitively be decomposed into:","category":"page"},{"location":"walk_through/","page":"Walk Through","title":"Walk Through","text":"1 Outcome variable (Y).\n2 Treatment variables (T₁ T₂) with confounders (W₁₁ W₁₂) and (W₂₁ W₂₂) respectively.\n1 Extra Covariate variable (C).","category":"page"},{"location":"walk_through/#The-Structural-Causal-Model","page":"Walk Through","title":"The Structural Causal Model","text":"","category":"section"},{"location":"walk_through/","page":"Walk Through","title":"Walk Through","text":"The modeling stage starts from the definition of a Structural Causal Model (SCM). This is simply a list of Structural Equations (SE) describing the relationships between the random variables associated with our problem. See Structural Causal Models for an in-depth explanation. For our purposes, we will simply define it as follows:","category":"page"},{"location":"walk_through/","page":"Walk Through","title":"Walk Through","text":"scm = SCM(\n    :Y  => [:T₁, :T₂, :W₁₁, :W₁₂, :W₂₁, :W₂₂, :C],\n    :T₁ => [:W₁₁, :W₁₂],\n    :T₂ => [:W₂₁, :W₂₂]\n)","category":"page"},{"location":"walk_through/#The-Causal-Estimands","page":"Walk Through","title":"The Causal Estimands","text":"","category":"section"},{"location":"walk_through/","page":"Walk Through","title":"Walk Through","text":"From the previous causal model we can ask multiple causal questions which are each represented by distinct causal estimands. The set of available estimands types can be listed as follow:","category":"page"},{"location":"walk_through/","page":"Walk Through","title":"Walk Through","text":"AVAILABLE_ESTIMANDS","category":"page"},{"location":"walk_through/","page":"Walk Through","title":"Walk Through","text":"At the moment there are 3 main causal estimands in TMLE.jl, we provide below a few examples.","category":"page"},{"location":"walk_through/","page":"Walk Through","title":"Walk Through","text":"The Counterfactual Mean:","category":"page"},{"location":"walk_through/","page":"Walk Through","title":"Walk Through","text":"cm = CM(\n    outcome = :Y,\n    treatment_values = (T₁=true,) \n)","category":"page"},{"location":"walk_through/","page":"Walk Through","title":"Walk Through","text":"The Average Treatment Effect:","category":"page"},{"location":"walk_through/","page":"Walk Through","title":"Walk Through","text":"total_ate = ATE(\n    outcome = :Y,\n    treatment_values = (\n        T₁=(case=1, control=0), \n        T₂=(case=1, control=0)\n    ) \n)\nmarginal_ate_t1 = ATE(\n    outcome = :Y,\n    treatment_values = (T₁=(case=1, control=0),) \n)","category":"page"},{"location":"walk_through/","page":"Walk Through","title":"Walk Through","text":"The Interaction Average Treatment Effect:","category":"page"},{"location":"walk_through/","page":"Walk Through","title":"Walk Through","text":"iate = IATE(\n    outcome = :Y,\n    treatment_values = (\n        T₁=(case=1, control=0), \n        T₂=(case=1, control=0)\n    ) \n)","category":"page"},{"location":"walk_through/#Identification","page":"Walk Through","title":"Identification","text":"","category":"section"},{"location":"walk_through/","page":"Walk Through","title":"Walk Through","text":"Identification is the process by which a Causal Estimand is turned into a Statistical Estimand, that is, a quantity we may estimate from data. This is done via the identify function which also takes in the SCM:","category":"page"},{"location":"walk_through/","page":"Walk Through","title":"Walk Through","text":"statistical_iate = identify(iate, scm)","category":"page"},{"location":"walk_through/","page":"Walk Through","title":"Walk Through","text":"Alternatively, you can also directly define the statistical parameters (see Estimands).","category":"page"},{"location":"walk_through/#Estimation","page":"Walk Through","title":"Estimation","text":"","category":"section"},{"location":"walk_through/","page":"Walk Through","title":"Walk Through","text":"Then each parameter can be estimated by building an estimator (which is simply a function) and calling it on data. For illustration, we will keep the models used simple linear models. We define a TMLE:","category":"page"},{"location":"walk_through/","page":"Walk Through","title":"Walk Through","text":"models = (\n    Y  = with_encoder(LinearRegressor()),\n    T₁ = LogisticClassifier(),\n    T₂ = LogisticClassifier()\n)\ntmle = TMLEE(models)","category":"page"},{"location":"walk_through/","page":"Walk Through","title":"Walk Through","text":"And estimate the cm causal parameter. Because we haven't identified the parameter, we need to provide the scm as well:","category":"page"},{"location":"walk_through/","page":"Walk Through","title":"Walk Through","text":"result, cache = tmle(cm, scm, dataset);\nresult","category":"page"},{"location":"walk_through/","page":"Walk Through","title":"Walk Through","text":"We can estimate statistical parameters directly, let's use the One-Step estimator:","category":"page"},{"location":"walk_through/","page":"Walk Through","title":"Walk Through","text":"ose = OSE(models)\nresult, cache = ose(statistical_iate, dataset)\nresult","category":"page"},{"location":"walk_through/#Hypothesis-Testing","page":"Walk Through","title":"Hypothesis Testing","text":"","category":"section"},{"location":"walk_through/","page":"Walk Through","title":"Walk Through","text":"Because the TMLE and OSE are asymptotically linear estimators, they asymptotically follow a Normal distribution. This means one can perform standard T/Z tests of null hypothesis. TMLE.jl extends the method provided by the HypothesisTests.jl package that can be used as follows.","category":"page"},{"location":"walk_through/","page":"Walk Through","title":"Walk Through","text":"OneSampleTTest(result)","category":"page"},{"location":"user_guide/scm/","page":"Structural Causal Models","title":"Structural Causal Models","text":"CurrentModule = TMLE","category":"page"},{"location":"user_guide/scm/#Structural-Causal-Models","page":"Structural Causal Models","title":"Structural Causal Models","text":"","category":"section"},{"location":"user_guide/scm/","page":"Structural Causal Models","title":"Structural Causal Models","text":"Even if you don't have to, it can be useful to define a Structural Causal Model (SCM) for your problem. A SCM is a directed acyclic graph that describes the causal relationships between the random variables under study.","category":"page"},{"location":"user_guide/scm/#Incremental-Construction","page":"Structural Causal Models","title":"Incremental Construction","text":"","category":"section"},{"location":"user_guide/scm/","page":"Structural Causal Models","title":"Structural Causal Models","text":"All models are wrong? Well maybe not the following:","category":"page"},{"location":"user_guide/scm/","page":"Structural Causal Models","title":"Structural Causal Models","text":"using TMLE # hide\nscm = SCM()","category":"page"},{"location":"user_guide/scm/","page":"Structural Causal Models","title":"Structural Causal Models","text":"This model does not say anything about the random variables and is thus not really useful. Let's assume that we are interested in an outcome Y and that this outcome is determined by 8 other random variables. We can add this assumption to the model","category":"page"},{"location":"user_guide/scm/","page":"Structural Causal Models","title":"Structural Causal Models","text":"add_equation!(scm, :Y => [:T₁, :T₂, :W₁₁, :W₁₂, :W₂₁, :W₂₂, :W, :C])","category":"page"},{"location":"user_guide/scm/","page":"Structural Causal Models","title":"Structural Causal Models","text":"Let's now assume that we have a more complete knowledge of the problem and we also know how T₁ and T₂ depend on the rest of the variables in the system.","category":"page"},{"location":"user_guide/scm/","page":"Structural Causal Models","title":"Structural Causal Models","text":"add_equations!(scm, :T₁ => [:W₁₁, :W₁₂, :W], :T₂ => [:W₂₁, :W₂₂, :W])","category":"page"},{"location":"user_guide/scm/#One-Step-Construction","page":"Structural Causal Models","title":"One Step Construction","text":"","category":"section"},{"location":"user_guide/scm/","page":"Structural Causal Models","title":"Structural Causal Models","text":"Instead of constructing the SCM incrementally, one can provide all the specified equations at once:","category":"page"},{"location":"user_guide/scm/","page":"Structural Causal Models","title":"Structural Causal Models","text":"scm = SCM(\n    :Y  => [:T₁, :T₂, :W₁₁, :W₁₂, :W₂₁, :W₂₂, :W, :C],\n    :T₁ => [:W₁₁, :W₁₂, :W],\n    :T₂ => [:W₂₁, :W₂₂, :W],\n)","category":"page"},{"location":"user_guide/scm/#Classic-Structural-Causal-Models","page":"Structural Causal Models","title":"Classic Structural Causal Models","text":"","category":"section"},{"location":"user_guide/scm/","page":"Structural Causal Models","title":"Structural Causal Models","text":"There are many cases where we are interested in estimating the causal effect of a some treatment variables on a some outcome variables. If all treatment variables share the same set of confounders, we can quickly define the associated SCM with the StaticSCM interface:","category":"page"},{"location":"user_guide/scm/","page":"Structural Causal Models","title":"Structural Causal Models","text":"scm = StaticSCM(\n    [:Y₁, :Y₂], \n    [:T₁, :T₂], \n    [:W₁, :W₂];\n    outcome_extra_covariates=[:C],\n)","category":"page"},{"location":"user_guide/scm/","page":"Structural Causal Models","title":"Structural Causal Models","text":"where outcome_extra_covariates is a set of extra variables that are causal of the outcomes but are not of direct interest in the study.","category":"page"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"CurrentModule = TMLE","category":"page"},{"location":"user_guide/estimands/#Estimands","page":"Estimands","title":"Estimands","text":"","category":"section"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"Most causal questions can be translated into a causal estimand. Usually either an interventional or counterfactual quantity. What would have been the outcome if I had set this variable to this value? When identified, this causal estimand translates to a statistical estimand which can be estimated from data. For us, an estimand will be a functional, that is a function that takes as input a probability distribution, and outputs a real number or vector of real numbers.","category":"page"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"Mathematically speaking, denoting the estimand by Psi, the set of all probability distributions by mathcalM:","category":"page"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"Psi mathcalM rightarrow mathbbR^p","category":"page"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"At the moment, most of the work in this package has been focused on estimands that are composite functions of the interventional conditional mean which is easily identified via backdoor adjustment and for which the efficient influence function is well known.","category":"page"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"In what follows, P is a probability distribution generating an outcome Y, a random vector of \"treatment\" variables textbfT and a random vector of \"confounding\" variables textbfW. For the examples, we will assume two treatment variables T₁ and T₂ taking either values 0 or 1. The SCM is given by:","category":"page"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"scm = StaticSCM(\n    [:Y], \n    [:T₁, :T₂], \n    [:W];\n)","category":"page"},{"location":"user_guide/estimands/#The-Interventional-Counterfactual-Mean-(CM)","page":"Estimands","title":"The Interventional Counterfactual Mean (CM)","text":"","category":"section"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"Causal Question:","category":"page"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"What would be the mean of Y in the population if we intervened on textbfT and set it to textbft?","category":"page"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"Causal Estimand:","category":"page"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"CM_textbft(P) = mathbbEYdo(textbfT=textbft)","category":"page"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"Statistical Estimand (via backdoor adjustment):","category":"page"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"CM_textbft(P) = mathbbE_textbfWmathbbEYdo(textbfT=textbft) textbfW","category":"page"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"TMLE.jl Example","category":"page"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"A causal estimand is given by:","category":"page"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"causalΨ = CM(outcome=:Y, treatment_values=(T₁=1, T₂=0))","category":"page"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"A corresponding statistical estimand can be identified via backdoor adjustment using the scm:","category":"page"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"statisticalΨ = identify(Ψ, scm)","category":"page"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"or defined directly:","category":"page"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"statisticalΨ = CM(\n    outcome=:Y, \n    treatment_values=(T₁=1, T₂=0),\n    treatment_confounders=(T₁=[:W], T₂=[:W])\n)","category":"page"},{"location":"user_guide/estimands/#The-Average-Treatment-Effect","page":"Estimands","title":"The Average Treatment Effect","text":"","category":"section"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"Causal Question:","category":"page"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"What is the average difference in treatment effect on Y when the two treatment levels are set to textbft_1 and textbft_2 respectively?","category":"page"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"Causal Estimand:","category":"page"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"ATE_textbft_1 rightarrow textbft_2(P) = mathbbEYdo(textbfT=textbft_2) - mathbbEYdo(textbfT=textbft_1)","category":"page"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"Statistical Estimand (via backdoor adjustment):","category":"page"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"beginaligned\nATE_textbft_1 rightarrow textbft_2(P) = CM_textbft_2(P) - CM_textbft_1(P) \n= mathbbE_textbfWmathbbEYtextbfT=textbft_2 textbfW - mathbbEYtextbfT=textbft_1 textbfW\nendaligned","category":"page"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"TMLE.jl Example","category":"page"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"A causal estimand is given by:","category":"page"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"causalΨ = ATE(\n    outcome=:Y, \n    treatment_values=(\n        T₁=(case=1, control=0), \n        T₂=(case=1, control=0)\n    )\n)","category":"page"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"A corresponding statistical estimand can be identified via backdoor adjustment using the scm:","category":"page"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"statisticalΨ = identify(causalΨ, scm)","category":"page"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"or defined directly:","category":"page"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"statisticalΨ = ATE(\n    outcome=:Y, \n    treatment_values=(\n        T₁=(case=1, control=0), \n        T₂=(case=1, control=0)\n    ),\n    treatment_confounders=(T₁=[:W], T₂=[:W])\n)","category":"page"},{"location":"user_guide/estimands/#The-Interaction-Average-Treatment-Effect","page":"Estimands","title":"The Interaction Average Treatment Effect","text":"","category":"section"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"Causal Question:","category":"page"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"Interactions can be defined up to any order but we restrict the interpretation to two variables. Is the Total Average Treatment Effect of T₁ and T₂ different from the sum of their respective marginal Average Treatment Effects? Is there a synergistic effect between T₁ and T₂ on Y.","category":"page"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"For a general higher-order definition, please refer to Higher-order interactions in statistical physics and machine learning: A model-independent solution to the inverse problem at equilibrium.","category":"page"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"Causal Estimand:","category":"page"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"For two points interaction with both treatment and control levels 0 and 1 for ease of notation:","category":"page"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"IATE_0 rightarrow 1 0 rightarrow 1(P) = mathbbEYdo(T_1=1 T_2=1) - mathbbEYdo(T_1=1 T_2=0)  \n- mathbbEYdo(T_1=0 T_2=1) + mathbbEYdo(T_1=0 T_2=0) ","category":"page"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"Statistical Estimand (via backdoor adjustment):","category":"page"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"IATE_0 rightarrow 1 0 rightarrow 1(P) = mathbbE_textbfWmathbbEYT_1=1 T_2=1 textbfW - mathbbEYT_1=1 T_2=0 textbfW  \n- mathbbEYT_1=0 T_2=1 textbfW + mathbbEYT_1=0 T_2=0 textbfW ","category":"page"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"TMLE.jl Example","category":"page"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"A causal estimand is given by:","category":"page"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"causalΨ = IATE(\n    outcome=:Y, \n    treatment_values=(\n        T₁=(case=1, control=0), \n        T₂=(case=1, control=0)\n    )\n)","category":"page"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"A corresponding statistical estimand can be identified via backdoor adjustment using the scm:","category":"page"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"statisticalΨ = identify(causalΨ, scm)","category":"page"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"or defined directly:","category":"page"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"statisticalΨ = IATE(\n    outcome=:Y, \n    treatment_values=(\n        T₁=(case=1, control=0), \n        T₂=(case=1, control=0)\n    ),\n    treatment_confounders=(T₁=[:W], T₂=[:W])\n)","category":"page"},{"location":"user_guide/estimands/#Any-function-of-the-previous-Estimands","page":"Estimands","title":"Any function of the previous Estimands","text":"","category":"section"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"As a result of Julia's automatic differentiation facilities, given a set of already estimated estimands (Psi_1  Psi_k), we can automatically compute an estimator for f(Psi_1  Psi_k). This is done via the compose function:","category":"page"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"compose(f, args...)","category":"page"},{"location":"user_guide/estimands/","page":"Estimands","title":"Estimands","text":"where args are asymptotically linear estimates (see Composing Estimands).","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = TMLE","category":"page"},{"location":"#Home","page":"Home","title":"Home","text":"","category":"section"},{"location":"#Overview","page":"Home","title":"Overview","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"TMLE.jl is a Julia implementation of the Targeted Minimum Loss-Based Estimation (TMLE) framework. If you are interested in efficient and unbiased estimation of causal effects, you are in the right place. Since TMLE uses machine-learning methods to estimate nuisance estimands, the present package is based upon MLJ.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"TMLE.jl can be installed via the Package Manager and supports Julia v1.6 and greater.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Pkg> add TMLE","category":"page"},{"location":"#Quick-Start","page":"Home","title":"Quick Start","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"To run an estimation procedure, we need 3 ingredients:","category":"page"},{"location":"","page":"Home","title":"Home","text":"A dataset: here a simulation dataset.","category":"page"},{"location":"","page":"Home","title":"Home","text":"For illustration, assume we know the actual data generating process is as follows:","category":"page"},{"location":"","page":"Home","title":"Home","text":"beginaligned\nW  sim mathcalUniform(0 1) \nT  sim mathcalBernoulli(logistic(1-2 cdot W)) \nY  sim mathcalNormal(1 + 3 cdot T - T cdot W 001)\nendaligned","category":"page"},{"location":"","page":"Home","title":"Home","text":"Because we know the data generating process, we can simulate some data accordingly:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using TMLE\nusing Distributions\nusing StableRNGs\nusing Random\nusing CategoricalArrays\nusing MLJLinearModels\nusing LogExpFunctions\n\nrng = StableRNG(123)\nn = 100\nW = rand(rng, Uniform(), n)\nT = rand(rng, Uniform(), n) .< logistic.(1 .- 2W)\nY = 1 .+ 3T .- T.*W .+ rand(rng, Normal(0, 0.01), n)\ndataset = (Y=Y, T=categorical(T), W=W)\nnothing # hide","category":"page"},{"location":"","page":"Home","title":"Home","text":"A quantity of interest: here the Average Treatment Effect (ATE).","category":"page"},{"location":"","page":"Home","title":"Home","text":"The Average Treatment Effect of T on Y confounded by W is defined as:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Ψ = ATE(\n    outcome=:Y, \n    treatment_values=(T=(case=true, control = false),), \n    treatment_confounders=(T=[:W],)\n)","category":"page"},{"location":"","page":"Home","title":"Home","text":"An estimator: here a Targeted Maximum Likelihood Estimator (TMLE).","category":"page"},{"location":"","page":"Home","title":"Home","text":"models = (Y=with_encoder(LinearRegressor()), T = LogisticClassifier())\ntmle = TMLEE(models)\nresult, _ = tmle(Ψ, dataset, verbosity=0);\nresult","category":"page"},{"location":"","page":"Home","title":"Home","text":"We are comforted to see that our estimator covers the ground truth! 🥳","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Test # hide\n@test pvalue(OneSampleTTest(result, 2.5)) > 0.05 # hide\nnothing # hide","category":"page"}]
}
